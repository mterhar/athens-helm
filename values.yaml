# -- configEdn contains the configuration options in a lenghty string with escaped quotes.
# from https://github.com/athensresearch/athens/blob/main/src/clj/config.default.edn
configEdn: "{:password \"suchWow\"}"

image:
  # -- Image used for athens backend
  repository: ghcr.io/athensresearch/athens
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v2.0.0-beta.1"

fluree:
  # -- Image used for fluree/ledger data storage
  image:
    repository: "fluree/ledger"
    tag: "1.0"
  # Leave storage class name as empty string "" to use default storage class.
  # -- Set the storage class name for the ledger blockchain, default: use default storage class
  storageClassName: ""
  # -- Set storage size for the ledger blockchain PVC
  storageSize: "10Gi"
  # -- Set resources for the fluree/ledger statefulset pods
  resources: {}

# -- Set image pull secrets if needed
imagePullSecrets: []

serviceAccount:
  # -- Specifies whether a service account should be created for Athens and Fluree/Ledger
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# -- Set podSecurityContext for athens pod. Fluree pod has fsGroup hard coded to work
# with the fluree/ledger user id: 1000
podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Sets the service type for Athens pod. Ledger pod is fixed as ClusterIP
  type: ClusterIP
  # -- Hard-coded in the athens image
  port: 3010
  # -- For use with LoadBalancer service type
  # loadBalancerIP:
  # externalTrafficPolicy: Local

ingress:
  # -- Create an ingress object to reference the ClusterIP Athens service
  enabled: false
  # -- Set an ingress class name
  className: ""
  # -- Add ingress annotations. Default values fix a frequent timeout issue.
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # The following come from the nginx.conf in athens
    # https://github.com/athensresearch/athens/blob/139e55fd9e94b626edb1f34acff7ee2d50c26624/nginx.conf#L20
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 7d
    nginx.ingress.kubernetes.io/proxy-send-timeout: 7d
    nginx.ingress.kubernetes.io/proxy-read-timeout: 7d
  hosts:
    - host: athens.example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- Is not compatible with the Athens client as of 2.0.0-beta so do not set this
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Set Resource limits for Althens pod, Recommend 2048 mb of memory due to JVM configuration in
# https://github.com/athensresearch/athens/blob/main/script/docker-run-lan-party.sh#L3
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 2048Mi
  # requests:
  #   cpu: 200m
  #   memory: 2048Mi

# -- Set nodeSelector for the whole chart, includes Athens and Ledger
nodeSelector: {}

# -- Set tolerations for the whole chart, includes Athens and Ledger
tolerations: []

# -- Set affinity for the whole chart, includes Athens and Ledger
affinity: {}
